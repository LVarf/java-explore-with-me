CREATE SCHEMA IF NOT EXISTS ewm_core AUTHORIZATION ewm;

CREATE TABLE IF NOT EXISTS ewm_core.categories
(
    id     int8         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "name" varchar(255) NOT NULL UNIQUE,
    CONSTRAINT category_pkey PRIMARY KEY (id)
);
COMMENT ON TABLE ewm_core.categories IS 'Категории';
COMMENT ON COLUMN ewm_core.categories."name" IS 'Название категории';

CREATE TABLE IF NOT EXISTS ewm_core.compilation
(
    id     int8         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    pinned bool         NOT NULL,
    title  varchar(255) NOT NULL,
    CONSTRAINT compilation_pkey PRIMARY KEY (id)
);
COMMENT ON TABLE ewm_core.compilation IS 'Подборка событий';
COMMENT ON COLUMN ewm_core.compilation.pinned IS 'Закреплена ли подборка на главной странице сайта';
COMMENT ON COLUMN ewm_core.compilation.title IS 'Заголовок подборки';

CREATE TABLE IF NOT EXISTS ewm_core.users
(
    id     int8         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    email  varchar(255) NOT NULL,
    "name" varchar(255) NOT NULL UNIQUE,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);
COMMENT ON TABLE ewm_core.users IS 'Пользователи';
COMMENT ON COLUMN ewm_core.users."name" IS 'Имя пользователя';
COMMENT ON COLUMN ewm_core.users.email IS 'Почтовый адрес пользователя';

CREATE TABLE IF NOT EXISTS ewm_core.events
(
    id                 int8      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    annotation         text      NULL,
    confirmed_requests int4 DEFAULT 0,
    created_on         timestamp NULL,
    description        text      NULL,
    event_date         timestamp NULL,
    location_lat       float4    NULL,
    location_lon       float4    NULL,
    paid               bool      NULL,
    participant_limit  int4 DEFAULT 0,
    published_on       timestamp NULL,
    request_moderation bool DEFAULT true,
    state              text CHECK (state IN ('PENDING', 'PUBLISHED', 'CANCELED')),
    title              text      NULL,
    "views"            int4      NULL,
    category_id        int8      NULL,
    initiator_id       int8      NULL,
    CONSTRAINT events_pkey PRIMARY KEY (id)
);
COMMENT ON TABLE ewm_core.events IS 'Информация о событии';
COMMENT ON COLUMN ewm_core.events.annotation IS 'Краткое описание';
COMMENT ON COLUMN ewm_core.events.confirmed_requests IS 'Количество одобренных заявок на участие в данном событии';
COMMENT ON COLUMN ewm_core.events.created_on IS 'Дата и время создания события (в формате "yyyy-MM-dd HH:mm:ss")';
COMMENT ON COLUMN ewm_core.events.description IS 'Полное описание события';
COMMENT ON COLUMN ewm_core.events.event_date IS 'Дата и время на которые намечено событие (в формате "yyyy-MM-dd HH:mm:ss")';
COMMENT ON COLUMN ewm_core.events.location_lat IS 'Широта места проведения события';
COMMENT ON COLUMN ewm_core.events.location_lon IS 'Долгота места проведения события';
COMMENT ON COLUMN ewm_core.events.paid IS 'Нужно ли оплачивать участие';
COMMENT ON COLUMN ewm_core.events.participant_limit IS 'Ограничение на количество участников. Значение 0 - означает отсутствие ограничения';
COMMENT ON COLUMN ewm_core.events.published_on IS 'Дата и время публикации события (в формате "yyyy-MM-dd HH:mm:ss")';
COMMENT ON COLUMN ewm_core.events.request_moderation IS 'Нужна ли пре-модерация заявок на участие';
COMMENT ON COLUMN ewm_core.events.state IS 'Список состояний жизненного цикла события: PENDING, PUBLISHED, CANCELED';
COMMENT ON COLUMN ewm_core.events.title IS 'Заголовок';
COMMENT ON COLUMN ewm_core.events."views" IS 'Количество просмотрев события';
COMMENT ON COLUMN ewm_core.events.category_id IS 'Категория';
COMMENT ON COLUMN ewm_core.events.initiator_id IS 'Идентификатор пользователя';

ALTER TABLE ewm_core.events
    DROP CONSTRAINT IF EXISTS fk_to_user;
ALTER TABLE ewm_core.events
    ADD CONSTRAINT fk_to_user FOREIGN KEY (initiator_id) REFERENCES ewm_core.users (id) ON DELETE CASCADE;
ALTER TABLE ewm_core.events
    DROP CONSTRAINT IF EXISTS fk_to_category;
ALTER TABLE ewm_core.events
    ADD CONSTRAINT fk_to_category FOREIGN KEY (category_id) REFERENCES ewm_core.categories (id);

CREATE TABLE IF NOT EXISTS ewm_core.event_to_compilation
(
    compilation_id int8 NOT NULL,
    event_id       int8 NOT NULL,
    CONSTRAINT event_to_compilation_pkey PRIMARY KEY (compilation_id, event_id)
);
COMMENT ON TABLE ewm_core.event_to_compilation IS 'Связь сущностей event и compilation';
COMMENT ON COLUMN ewm_core.event_to_compilation.compilation_id IS 'Ссылка на запись в таблице compilation';
COMMENT ON COLUMN ewm_core.event_to_compilation.event_id IS 'Ссылка на запись в таблице event';

ALTER TABLE ewm_core.event_to_compilation
    DROP CONSTRAINT IF EXISTS fk_to_event_from_event_to_compilation;
ALTER TABLE ewm_core.event_to_compilation
    ADD CONSTRAINT fk_to_event_from_event_to_compilation FOREIGN KEY (event_id)
        REFERENCES ewm_core.events (id) ON DELETE CASCADE;
ALTER TABLE ewm_core.event_to_compilation
    DROP CONSTRAINT IF EXISTS fk_to_compilation_from_event_to_compilation;
ALTER TABLE ewm_core.event_to_compilation
    ADD CONSTRAINT fk_to_compilation_from_event_to_compilation FOREIGN KEY (compilation_id)
        REFERENCES ewm_core.compilation (id) ON DELETE CASCADE;

CREATE TABLE IF NOT EXISTS ewm_core.participation_request
(
    id           int8      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created      timestamp NULL,
    status       text CHECK (status IN ('CONFIRMED', 'PENDING', 'PUBLISHED', 'CANCELED')),
    event_id     int8      NULL,
    requester_id int8      NULL,
    CONSTRAINT participation_request_pkey PRIMARY KEY (id)
);
COMMENT ON TABLE ewm_core.participation_request IS 'Заявка на участие в событии';
COMMENT ON COLUMN ewm_core.participation_request.created IS 'Дата и время создания заявки';
COMMENT ON COLUMN ewm_core.participation_request.event_id IS 'Идентификатор события';
COMMENT ON COLUMN ewm_core.participation_request.requester_id IS 'Идентификатор пользователя, отправившего заявку';
COMMENT ON COLUMN ewm_core.participation_request.status IS 'Статус заявки';

ALTER TABLE ewm_core.participation_request
    DROP CONSTRAINT IF EXISTS fk_to_event_from_participation_request;
ALTER TABLE ewm_core.participation_request
    ADD CONSTRAINT fk_to_event_from_participation_request FOREIGN KEY (event_id)
        REFERENCES ewm_core.events (id) ON DELETE CASCADE;
ALTER TABLE ewm_core.participation_request
    DROP CONSTRAINT IF EXISTS fk_to_user_from_participation_request;
ALTER TABLE ewm_core.participation_request
    ADD CONSTRAINT fk_to_user_from_participation_request FOREIGN KEY (requester_id)
        REFERENCES ewm_core.users (id) ON DELETE CASCADE;




















































